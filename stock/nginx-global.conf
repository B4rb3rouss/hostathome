# redirect http to https.
server {
  listen 80;
  server_name ${NOMDHOTE};
  return 301 https://$server_name$request_uri;  # enforce https
}

server {
    listen 443 ssl;
    ${SSLCERT}
    server_name ${NOMDHOTE};
    index index.php index.html doku.php;
    root ${ROOTOFHTTP};
    client_max_body_size 1500M;
    include /etc/nginx/conf.d/php;

    # owncloud
    rewrite ^/cloud/caldav(.*)$ /owncloud/remote.php/caldav$1 redirect;
    rewrite ^/cloud/carddav(.*)$ /owncloud/remote.php/carddav$1 redirect;
    rewrite ^/cloud/webdav(.*)$ /owncloud/remote.php/webdav$1 redirect;
    location /cloud {
	    error_page 403 /owncloud/core/templates/403.php;
	    error_page 404 /owncloud/core/templates/404.php;
        # The following 2 rules are only needed with webfinger
        rewrite ^/cloud/.well-known/host-meta /owncloud/public.php?service=host-meta last;
        rewrite ^/cloud/.well-known/host-meta.json /owncloud/public.php?service=host-meta-json last;

        rewrite ^/cloud/.well-known/carddav /owncloud/remote.php/carddav/ redirect;
        rewrite ^/cloud/.well-known/caldav /owncloud/remote.php/caldav/ redirect;

        rewrite ^/cloud/(/core/doc/[^/]+/)$ /owncloud/$1/index.html;

        try_files $uri $uri/ /cloud/index.php;
    }

    location = /cloud/robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    # deny direct access
    location ~ ^/cloud/(data|config|.ht|db_structure.xml|README) {
        deny all;
    }

    # Optional: set long EXPIRES header on static assets
    location ~* ^/cloud/.+.(jpg|jpeg|gif|bmp|ico|png|css|js|swf)$ {
        expires 30d;
        # Optional: Don't log access to assets
        access_log off;
    }
    #---


    #shaarli
    location ^~ /liens/cache {
        deny all;
        return 403;
    }
    location ^~ /liens/data {
        deny all;
        return 403;
    } 
    #---


    #dokuwiki
    location ~ /wiki/(data|conf|bin|inc)/ {
        deny all;
    }

    location ~ ^/wiki/dokuwiki/lib/^((?!php).)*$  {
      root         ${ROOTOFHTTP}/lib;   #adapt if needed
      expires 30d;
    }
    #---
}


