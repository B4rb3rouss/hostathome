# redirect http to https.
server {
  listen 80;
  server_name ${NOMDHOTE};
  return 301 https://$server_name$request_uri;  # enforce https
}

server {
    listen 443 ssl;
    ${SSLCERT}
    server_name ${NOMDHOTE};
    index index.php index.html doku.php;
    root ${ROOTOFHTTP};
    client_max_body_size 1500M;

    location ~ .php(?:$|/) {
        fastcgi_split_path_info ^(.+.php)(/.+)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTPS on;
        fastcgi_pass unix:/var/run/php5-fpm.sock;
    }

    # owncloud
    rewrite ^/owncloud/caldav(.*)$ /owncloud/remote.php/caldav$1 redirect;
    rewrite ^/owncloud/carddav(.*)$ /owncloud/remote.php/carddav$1 redirect;
    rewrite ^/owncloud/webdav(.*)$ /owncloud/remote.php/webdav$1 redirect;
    location /owncloud {
	    error_page 403 /owncloud/core/templates/403.php;
	    error_page 404 /owncloud/core/templates/404.php;
        # The following 2 rules are only needed with webfinger
        rewrite ^/owncloud/.well-known/host-meta /owncloud/public.php?service=host-meta last;
        rewrite ^/owncloud/.well-known/host-meta.json /owncloud/public.php?service=host-meta-json last;

        rewrite ^/owncloud/.well-known/carddav /owncloud/remote.php/carddav/ redirect;
        rewrite ^/owncloud/.well-known/caldav /owncloud/remote.php/caldav/ redirect;

        rewrite ^/owncloud/(/core/doc/[^/]+/)$ /owncloud/$1/index.html;

        try_files $uri $uri/ /owncloud/index.php;
    }

    location = /owncloud/robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }
    # deny direct access
    location ~ ^/owncloud/(data|config|.ht|db_structure.xml|README) {
        deny all;
    }

    # Optional: set long EXPIRES header on static assets
    location ~* ^/owncloud/.+.(jpg|jpeg|gif|bmp|ico|png|css|js|swf)$ {
        expires 30d;
        # Optional: Don't log access to assets
        access_log off;
    }
    #---


    #shaarli
    location ^~ /liens/cache {
        deny all;
        return 403;
    }
    location ^~ /liens/data {
        deny all;
        return 403;
    } 
    #---


    #dokuwiki
    location ~ /wiki/(data|conf|bin|inc)/ {
        deny all;
    }

    location ~ ^/wiki/dokuwiki/lib/^((?!php).)*$  {
      root         ${ROOTOFHTTP}/lib;   #adapt if needed
      expires 30d;
    }
    #---
    

    #squirrelmail
	location /webmail/ {
        ## Protect the web root configure.
        location = /webmail/configure {
            return 404;
        }
        ## If no favicon exists return a 204 (no content error).
        location = /webmail/favicon.ico {
            try_files $uri @empty;
            log_not_found off;
            access_log off;
        }

        ## Disable all robots crawling.
        location = /webmail/robots.txt {
            return 200 "User-agent: *\nDisallow: /\n";
        }
        ## Protect the documents directory.
        location ^~ /webmail/doc/ {
            return 404;
        }
        ## Protect the translation directory.
        location ^~ /webmail/po/ {
            return 404;
        }
        ## Protect the attach and data directories. You can comment
        ## out this if these directories are out of the web root in
        ## your setup. That is the default squirrelmail configuration.
        location ^~ /webmail/attach/ {
            return 404;
        }
        location ^~ /webmail/data/ {
            return 404;
        }
        ## All files/directories that are protected and unaccessible from
        ## the web.
        location ~* ^/webmail/.*(\.(?:git|htaccess|pl|svn|txt))$ {
            return 404;
        }

        ## All READMEs are off limits.
        location ~* /webmail/README {
            return 404;
        }

        try_files $uri $uri/ /index.php;
    }
    ## Return a 1x1 in memory GIF.
        location @empty {
            empty_gif;
        }
    #---
}
